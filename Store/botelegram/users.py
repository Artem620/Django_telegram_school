import os

import telebot
from botelegram.main import bot
import function_bot
from teachers import handle_teacher_profile

users = {}
index_photo = {}


# –§—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
def handle_message(message):
    chat_id = message.chat.id

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –µ—â–µ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω, –Ω–∞—á–∏–Ω–∞–µ–º —Å –ª–æ–≥–∏–Ω–∞
    if chat_id not in users:
        users[chat_id] = {'step': 1}  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–π —à–∞–≥
        bot.send_message(chat_id, "–ü—Ä–∏–≤–µ—Ç! –í–≤–µ–¥–∏ —Å–≤–æ–π –ª–æ–≥–∏–Ω:")

    elif users[chat_id]['step'] == 1:  # –õ–æ–≥–∏–Ω
        login = message.text
        users[chat_id]['login'] = login
        users[chat_id]['step'] = 2  # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫–æ –≤—Ç–æ—Ä–æ–º—É —à–∞–≥—É
        bot.send_message(chat_id, f"–û—Ç–ª–∏—á–Ω–æ, {login}. –¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏ —Å–≤–æ–π –ø–∞—Ä–æ–ª—å:")

    elif users[chat_id]['step'] == 2:  # –ü–∞—Ä–æ–ª—å
        password = message.text
        users[chat_id]['password'] = password
        result = function_bot.check(login=users[chat_id]['login'], password=password)

        if result[0] == 1:
            keyboard = telebot.types.InlineKeyboardMarkup()
            button_teacher = telebot.types.InlineKeyboardButton(text="üë©üèª‚Äçüè´ –£—á–∏—Ç–µ–ª—å", callback_data="teacher")
            button_student = telebot.types.InlineKeyboardButton(text="üë®üèª‚Äçüéì –£—á–µ–Ω–∏–∫", callback_data="student")
            keyboard.add(button_student, button_teacher)
            bot.send_message(chat_id, f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π, {result[1]} {result[2]}\n–í—ã–±–µ—Ä–∏ —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å",
                             reply_markup=keyboard)
        elif result[0] == 2:
            handle_student_or_teacher(result, message)
        elif result[0] == 3:
            handle_invalid_login_or_password(message)


def handle_student_or_teacher(result, message):
    chat_id = message.chat.id
    if result[5] == "teacher":
        if result[6] is None:
            bot.send_message(chat_id, "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à–µ —Ñ–æ—Ç–æ.")
        else:
            handle_teacher_profile(message, result)
    else:
        user_profile(message, result)


def handle_invalid_login_or_password(message):
    chat_id = message.chat.id
    keyboard = telebot.types.InlineKeyboardMarkup()
    button_teacher = telebot.types.InlineKeyboardButton(text="–ó–∞–Ω–æ–≤–æ", callback_data="restart")
    button_restart_password = telebot.types.InlineKeyboardButton(text="–í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–∞—Ä–æ–ª—å",
                                                                 callback_data="password_restart",
                                                                 url="http://127.0.0.1:8000/")
    keyboard.add(button_teacher, button_restart_password)
    bot.send_message(chat_id, "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ª–æ–≥–∏–Ω –∏–ª–∏ –ø–∞—Ä–æ–ª—å.", reply_markup=keyboard)






def user_profile(message, res):
    resu = []
    chat_id = message.chat.id
    keyboard = telebot.types.InlineKeyboardMarkup(row_width=2)
    btn1 = telebot.types.InlineKeyboardButton(text="–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –Ω–µ–¥–µ–ª—é", callback_data="week")
    btn2 = telebot.types.InlineKeyboardButton(text="–î–æ–º–∞—à–Ω–∏–µ –∑–∞–¥–∞–Ω–∏–µ", callback_data="home_work")
    btn3 = telebot.types.InlineKeyboardButton(text="–û—Ü–µ–Ω–∫–∏", callback_data="evaluations")

    if res[4] is None:
        resu = function_bot.predment_list(users[chat_id]["login"])
        btn4 = telebot.types.InlineKeyboardButton(text="–î–æ–±–∞–≤–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ —É—Ä–æ–∫–æ–≤", callback_data="week_new")
        keyboard.add(btn1, btn2, btn3, btn4)
    else:
        resu = function_bot.predment_list(users[chat_id]["login"])
        keyboard.add(btn1, btn2, btn3)

    subject_list = "\n".join(resu)
    bot.send_message(
        chat_id=message.chat.id,
        text=f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π, {res[2]} {res[1]}.\n–í–∞—à–∏ –ø—Ä–µ–¥–º–µ—Ç—ã: {subject_list}.\n–ú—ã –∫–∞–∂–¥—ã–π –º–µ—Å—è—Ü –±—É–¥–µ–º –ø–∏—Å–∞—Ç—å, —Å–∫–æ–ª—å–∫–æ —É –≤–∞—Å –æ—Å—Ç–∞–ª–æ—Å—å —Å—Ä–æ–∫ –æ–±—É—á–µ–Ω–∏—è.",
        reply_markup=keyboard
    )


@bot.callback_query_handler(func=lambda call: call.data in ['week', 'home_work', 'evaluations', 'week_new'])
def handler_main(call):
    teachers = []
    chat_id = call.message.chat.id
    student = function_bot.check(login=users[chat_id]['login'], password=users[chat_id]["password"], check_predmet=1)
    teachers.append([teacher for subject in student[-1] for teacher in function_bot.teacher_list(subject)])

    if call.data == "week_new":
        bot.send_message(
            chat_id,
            "–ü—Ä–∏–≤–µ—Ç, –Ω–∞—à –¥–æ—Ä–æ–≥–æ–π –¥—Ä—É–≥! \n–°–µ–π—á–∞—Å —Ç–µ–±–µ –ø—Ä–µ–¥—Å—Ç–æ–∏—Ç —Å–¥–µ–ª–∞—Ç—å —Å–∞–º—ã–π —Å–ª–æ–∂–Ω—ã–π –≤—ã–±–æ—Ä ‚Äî –≤—ã–±–æ—Ä —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è. –°–µ–π—á–∞—Å –ø–µ—Ä–µ–¥ —Ç–æ–±–æ–π –ø–æ—è–≤–∏—Ç—Å—è —Å–ø–∏—Å–æ–∫ —É—á–∏—Ç–µ–ª–µ–π, –∏—Ö —Ñ–æ—Ç–æ –∏ —Ä–µ–≥–∞–ª–∏–∏."
        )
        send_photo_with_buttons(chat_id, teachers, False)


def send_photo_with_buttons(chat_id, teachers, check_index_teacher):
    global index_photo
    if chat_id not in index_photo:
        index_photo[chat_id] = 0  # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∏–Ω–¥–µ–∫—Å –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —á–∞—Ç–∞

    keyboard = telebot.types.InlineKeyboardMarkup(row_width=3)

    if index_photo[chat_id] > 0:
        keyboard.add(telebot.types.InlineKeyboardButton("‚¨ÖÔ∏è", callback_data='prev'))

    keyboard.add(
        telebot.types.InlineKeyboardButton("‚û°Ô∏è", callback_data='next'),
        telebot.types.InlineKeyboardButton("–í—ã–±—Ä–∞—Ç—å", callback_data='ok')
    )

    teacher_photo = teachers[index_photo[chat_id]].photo_teacher

    if os.path.isfile(teacher_photo):
        with open(teacher_photo, "rb") as photo:
            bot.send_photo(chat_id, photo, reply_markup=keyboard)
    else:
        bot.send_photo(chat_id, teacher_photo, reply_markup=keyboard)


@bot.callback_query_handler(func=lambda call: call.data in ["prev", "next", "ok"])
def handle_callback(call):
    global index_photo
    chat_id = call.message.chat.id

    student = function_bot.check(login=users[chat_id]['login'], password=users[chat_id]["password"])
    teachers = function_bot.teacher_list(student[-1])

    if call.data == 'prev':
        index_photo[chat_id] = (index_photo[chat_id] - 1) % len(teachers)
    elif call.data == 'next':
        index_photo[chat_id] = (index_photo[chat_id] + 1) % len(teachers)
    elif call.data == 'ok':
        bot.send_message(chat_id, "–í—ã –≤—ã–±—Ä–∞–ª–∏ —É—á–∏—Ç–µ–ª—è.")

    send_photo_with_buttons(chat_id, teachers, True)


def handle_teacher_profile(message, res):
    chat_id = message.chat.id
    teachers = [teacher for subject in res[-1] for teacher in function_bot.teacher_list(subject)]

    if not teachers:
        bot.send_message(chat_id, "–ù–µ—Ç —É—á–∏—Ç–µ–ª–µ–π –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞.")
        return

    send_photo_with_buttons(chat_id, teachers, False)
